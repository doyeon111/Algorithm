***음료수 얼려먹기***
(파이썬)
graph = []
n, m = map(int,input().split())
for _ in range(n):
    graph.append(list(map(int,input())))
 
answer = 0 
def dfs(x,y):
    if x<=-1 or x>=n or y<0 or y>=m: # 범위 벗어나면 종료
        return False
    
    if graph[x][y]==0:
        graph[x][y] = 1
        for i in range(4):
            dfs(x+dx[i],y+dy[i])
        return True
    
dx = [-1,1,0,0] # 상하좌우
dy = [0,0,-1,1]
 
for i in range(n):
    for j in range(m):
        if dfs(i,j)==True:
            answer+=1
 
print(answer)

***DFS***
def dfs(graph, v, visited):
# 현재 노드를 방문 처리
visited[v] = True
print(v, end=' ')
# 현재 노드와 연결된 다른 노드를 재귀적으로 방문
for i in graph[v]:
if not visited[i]:
dfs(graph, i, visited)
graph = [
[],
[2, 3, 8],
[1, 7],
[1, 4, 5],
[3, 5],
[3, 4],
[7],
[2, 6, 8],
[1, 7]
]
# 각 노드가 방문된 정보를 표현 (1차원 리스트)
visited = [False] * 9

dfs(graph, 1, visited)




